[{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"improve understanding role HALS algorithm NMF analysis genomic data, work microarray dataset.","code":"Sabina Chiaretti, Xiaochun Li, Robert Gentleman, Antonella Vitale,      Marco Vignetti, Franco Mandelli, Jerome Ritz, and Robin Foa Gene      expression profile of adult T-cell acute lymphocytic leukemia      identifies distinct subsets of patients with different response to      therapy and survival. Blood, 1 April 2004, Vol. 103, No. 7. # to avoid conflicting symbol warnings suppressWarnings({ library(ALL) library(matrixStats) library(hgu95av2.db) library(SummarizedExperiment) library(randomForest) library(ggbiplot) library(multivariateEpigenomics) library(NMF) })"},{"path":[]},{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"filtering-and-feature-annotation","dir":"Articles","previous_headings":"Data acquisition and setup","what":"Filtering and feature annotation","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"reduce dataset two patient types: BCR/ABL fusion negative known cytogenetic feature used prognosis time study. filter features upper quantile -patient variation. Transform data representation SummarizedExperiment rename features HUGO symbols.","code":"library(ALL) data(ALL) fuvn = ALL[, which(ALL$mol.biol %in% c(\"BCR/ABL\", \"NEG\"))] fuvn$mol.biol = factor(fuvn$mol.biol) library(matrixStats) ss = rowSds(exprs(fuvn)) #> sum(ss>.5) #[1] 3182 ffuvn = fuvn[which(ss>.5),] library(hgu95av2.db) mapas = mapIds(hgu95av2.db, keys=rownames(ffuvn), column=\"SYMBOL\", keytype=\"PROBEID\") # as = affy to symbol library(SummarizedExperiment) ffuvnse = as(ffuvn, \"SummarizedExperiment\") ffuvnse ## class: SummarizedExperiment  ## dim: 3182 111  ## metadata(3): experimentData annotation protocolData ## assays(1): exprs ## rownames(3182): 1005_at 1007_s_at ... AFFX-YEL021w/URA3_at ##   AFFX-YEL024w/RIP1_at ## rowData names(0): ## colnames(111): 01005 01010 ... 83001 LAL4 ## colData names(21): cod diagnosis ... f.u date.last.seen bad = which(is.na(mapas)) pbad = names(mapas)[bad] exclprobes = intersect(pbad, rownames(ffuvnse)) badinds = which(rownames(ffuvnse) %in% exclprobes) ffuvnse = ffuvnse[-badinds,] rowData(ffuvnse) = DataFrame(probeid=rownames(ffuvnse), sym=mapas[rownames(ffuvnse)]) rownames(ffuvnse) = rowData(ffuvnse)$sym ffuvnse ## class: SummarizedExperiment  ## dim: 3131 111  ## metadata(3): experimentData annotation protocolData ## assays(1): exprs ## rownames(3131): DUSP1 DDR1 ... STAT1 TFRC ## rowData names(2): probeid sym ## colnames(111): 01005 01010 ... 83001 LAL4 ## colData names(21): cod diagnosis ... f.u date.last.seen"},{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"isolation-of-informative-features-using-random-forests","dir":"Articles","previous_headings":"","what":"Isolation of informative features using random forests","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"Even though overall OOB misclassification estimate attractive, confusion matrix appealing.  Let’s take top 15 features multivariate analysis.","code":"library(randomForest) set.seed(1234) # make reproducible ldf = data.frame(molb=ffuvnse$mol.biol, t(assay(ffuvnse))) rf1 = randomForest(molb~., data=ldf, importance=TRUE) rf1 ##  ## Call: ##  randomForest(formula = molb ~ ., data = ldf, importance = TRUE)  ##                Type of random forest: classification ##                      Number of trees: 500 ## No. of variables tried at each split: 55 ##  ##         OOB estimate of  error rate: 11.71% ## Confusion matrix: ##         BCR/ABL NEG class.error ## BCR/ABL      28   9  0.24324324 ## NEG           4  70  0.05405405 varImpPlot(rf1) im = rf1$importance top = rownames(im[order(im[,3], decreasing=TRUE),])[1:15] top ##  [1] \"ABL1.1\"   \"ABL1.3\"   \"ALDH1A1\"  \"KLF9\"     \"EPS8\"     \"ABL1\"     ##  [7] \"PON2\"     \"MARCKS\"   \"SEMA6A\"   \"TUBA4A.1\" \"MTSS1\"    \"CNN3\"     ## [13] \"CDK14\"    \"GAB1.2\"   \"ECM1\""},{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"multivariate-exploration-1-pca","dir":"Articles","previous_headings":"","what":"Multivariate exploration 1: PCA","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"Basic computation: Overview:  simple biplot show details projection (first two components) Try 2 3:  PC1 seems provide information discriminate BCR/ABL fusion negative prognostic cytogenetic features, PC2 PC3 may helping isolate genes discriminate different transcriptional patterns (possibly different clinical sequelae) within BCR/ABL fusion. ’ll comparing data reduction method NMF. NMF results frequently presented heatmaps. ’s one approach PCA:   minimum, shows low values PC1 discriminate BCR/ABL fusion reasonably well. confirm , one work samples TARGET study using Bioconductor’s GenomicDataCommons package.","code":"pp = prcomp(data.matrix(ldf[,top])) pairs(pp$x[,1:4], col=factor(ldf$molb), pch=19, cex=.4) ggbiplot(pp) + geom_point(aes(colour=ldf$molb)) ggbiplot(pp, c(2,3)) + geom_point(aes(colour=ldf$molb)) aheatmap(pp$x[,1:4], scale=\"none\", annRow=ldf$molb) aheatmap(t(pp$rot[top,1:4]), scale=\"none\", Rowv=NA, Colv=NA)"},{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"multivariate-exploration-2-nmf","dir":"Articles","previous_headings":"","what":"Multivariate exploration 2: NMF","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"non-negative matrix factorization (NMF) help us explore expression patterns data? matrix Xn×pX_{n \\times p} expression values (rows correspond patients, columns genes) factored X≈WHtX \\approx WH^t rank WW set r<<pr << p.","code":""},{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"gaujoux-package","dir":"Articles","previous_headings":"Multivariate exploration 2: NMF","what":"Gaujoux’ package","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"’ll use CRAN package NMF Renaud Gaujoux set rr 4. W H matrices can visualized heatmaps:","code":"library(NMF) nmf1 = nmf(ldf[, top], 4) basismap(nmf1, annRow=ldf$molb) coefmap(nmf1)"},{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"gregg-implementation-of-hals-in-julia","dir":"Articles","previous_headings":"Multivariate exploration 2: NMF","what":"Gregg implementation of HALS in Julia","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"’s analog basismap HALS algorithm:  Coefficients:","code":"library(multivariateEpigenomics) nmf2 = nmf_HALS(data.matrix(ldf[, top]), 4) aheatmap(nmf2$W, scale=\"r1\", annRow=ldf$molb) aheatmap(t(nmf2$H), scale=\"c1\", Rowv=NA, Colv=TRUE)"},{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"comparing-discriminative-capacities-of-the-three-approaches","dir":"Articles","previous_headings":"","what":"Comparing discriminative capacities of the three approaches","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"’ll use random forests data reductions.","code":""},{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"four-pcs","dir":"Articles","previous_headings":"Comparing discriminative capacities of the three approaches","what":"Four PCs","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"","code":"newdf1 = data.frame(molb=ldf$molb, pp$x[,1:4]) head(newdf1,3) ##          molb       PC1         PC2        PC3        PC4 ## 01005 BCR/ABL -5.286390  0.28812041 -0.5818160 -0.4489509 ## 01010     NEG  1.283034 -0.74729496  0.4412039  1.2070504 ## 03002 BCR/ABL -6.268100 -0.09124536 -0.5753392  0.3960636 nr1 = randomForest(molb~., data=newdf1) nr1 ##  ## Call: ##  randomForest(formula = molb ~ ., data = newdf1)  ##                Type of random forest: classification ##                      Number of trees: 500 ## No. of variables tried at each split: 2 ##  ##         OOB estimate of  error rate: 7.21% ## Confusion matrix: ##         BCR/ABL NEG class.error ## BCR/ABL      33   4  0.10810811 ## NEG           4  70  0.05405405"},{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"four-basis-elements-from-gajoux-nmf","dir":"Articles","previous_headings":"Comparing discriminative capacities of the three approaches","what":"Four basis elements from Gajoux NMF","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"","code":"newdf2 = data.frame(molb=ldf$molb, basis(nmf1)) head(newdf2) ##          molb       X1        X2       X3       X4 ## 01005 BCR/ABL 7.353671  9.664595 4.435785 4.127642 ## 01010     NEG 3.339959  5.730598 5.787085 5.411212 ## 03002 BCR/ABL 8.169915 11.571760 2.302937 3.888486 ## 04007     NEG 4.803022 10.131980 3.362568 4.483045 ## 04008     NEG 3.487283  6.252317 5.691256 3.190453 ## 04010     NEG 2.931594  6.377346 6.169460 4.316055 nr2 = randomForest(molb~., data=newdf2) nr2 ##  ## Call: ##  randomForest(formula = molb ~ ., data = newdf2)  ##                Type of random forest: classification ##                      Number of trees: 500 ## No. of variables tried at each split: 2 ##  ##         OOB estimate of  error rate: 19.82% ## Confusion matrix: ##         BCR/ABL NEG class.error ## BCR/ABL      25  12   0.3243243 ## NEG          10  64   0.1351351"},{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"four-basis-elements-from-gregg-nmf","dir":"Articles","previous_headings":"Comparing discriminative capacities of the three approaches","what":"Four basis elements from Gregg NMF","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"","code":"newdf3 = data.frame(molb=ldf$molb, nmf2$W) head(newdf3) ##          molb         X1         X2         X3         X4 ## 01005 BCR/ABL 0.13330363 0.07871361 0.08242624 0.12487073 ## 01010     NEG 0.07932313 0.10315914 0.07383619 0.07563357 ## 03002 BCR/ABL 0.13884623 0.08740193 0.05415050 0.15494375 ## 04007     NEG 0.11026347 0.10895646 0.03755877 0.11316966 ## 04008     NEG 0.09112892 0.07427573 0.07092190 0.04698532 ## 04010     NEG 0.08566357 0.08889185 0.07922343 0.05450893 nr3 = randomForest(molb~., data=newdf3) nr3 ##  ## Call: ##  randomForest(formula = molb ~ ., data = newdf3)  ##                Type of random forest: classification ##                      Number of trees: 500 ## No. of variables tried at each split: 2 ##  ##         OOB estimate of  error rate: 17.12% ## Confusion matrix: ##         BCR/ABL NEG class.error ## BCR/ABL      28   9   0.2432432 ## NEG          10  64   0.1351351"},{"path":"https://github.com/vjcitn/multivariateEpigenomics/articles/nmflook.html","id":"upshots","dir":"Articles","previous_headings":"","what":"Upshots","title":"Exploring NMF and other views of high-dimensional multivariate data","text":"informal overview dimension reduction. default choices Gajoux NMF implementation seem inferior HALS implementation Gregg. PCA seems useful task hand. Now need consider methylation data issues scale.","code":""},{"path":"https://github.com/vjcitn/multivariateEpigenomics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vince Carey. Author, maintainer. Rpbert Gregg. Author.","code":""},{"path":"https://github.com/vjcitn/multivariateEpigenomics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carey V, Gregg R (2025). multivariateEpigenomics: Statistical analysis epigenomic assays. R package version 0.0.1, https://github.com/vjcitn/multivariateEpigenomics.","code":"@Manual{,   title = {multivariateEpigenomics: Statistical analysis for epigenomic assays},   author = {Vince Carey and Rpbert Gregg},   year = {2025},   note = {R package version 0.0.1},   url = {https://github.com/vjcitn/multivariateEpigenomics}, }"},{"path":"https://github.com/vjcitn/multivariateEpigenomics/index.html","id":"multivariateepigenomics","dir":"","previous_headings":"","what":"Statistical analysis for epigenomic assays","title":"Statistical analysis for epigenomic assays","text":"package intended help exploration high-dimensional epigenomic data Illumina EPIC array. version 0.0.1, include Julia code implementing NMF algorithm vignette comparing PCA two NMF implementations. install code, following succeed, approaches possible. need devtools installed must use R 4.3 later, must also recent version julia.","code":"devtools::install_github(\"vjcitn/multivariateEpigenomics\", dependencies=TRUE)"},{"path":"https://github.com/vjcitn/multivariateEpigenomics/reference/nmf_HALS.html","id":null,"dir":"Reference","previous_headings":"","what":"Use Robert Gregg's implementation of HALS for NMF in Julia — nmf_HALS","title":"Use Robert Gregg's implementation of HALS for NMF in Julia — nmf_HALS","text":"Use Robert Gregg's implementation HALS NMF Julia","code":""},{"path":"https://github.com/vjcitn/multivariateEpigenomics/reference/nmf_HALS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use Robert Gregg's implementation of HALS for NMF in Julia — nmf_HALS","text":"","code":"nmf_HALS(x, r, alpha = 0.2, maxiter = 250)"},{"path":"https://github.com/vjcitn/multivariateEpigenomics/reference/nmf_HALS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use Robert Gregg's implementation of HALS for NMF in Julia — nmf_HALS","text":"x matrix r target rank alpha regularization factor, defaults 0.2 maxiter numeric, passed julia","code":""},{"path":"https://github.com/vjcitn/multivariateEpigenomics/reference/nmf_HALS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use Robert Gregg's implementation of HALS for NMF in Julia — nmf_HALS","text":"list elements, X, W, H, res, call","code":""},{"path":"https://github.com/vjcitn/multivariateEpigenomics/reference/nmf_HALS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use Robert Gregg's implementation of HALS for NMF in Julia — nmf_HALS","text":"","code":"mym = matrix(1:100,nr=10)*1.0 nn = nmf_HALS(mym, 4) #> Julia version 1.11.3 at location /Users/vincentcarey/.julia/juliaup/julia-1.11.3+0.aarch64.apple.darwin14/bin will be used. #> Loading setup script for JuliaCall... #> Finish loading setup script for JuliaCall. nn$res #> [1] 0.001308478 rec = nn$W %*% t(nn$H) rec[1:4,1:4] #>          [,1]     [,2]     [,3]     [,4] #> [1,] 1.178223 10.97213 20.97057 30.96901 #> [2,] 2.129378 11.96334 21.96210 31.96086 #> [3,] 3.182175 12.93516 22.93356 32.93196 #> [4,] 4.164033 13.93045 23.93042 33.93038"}]
